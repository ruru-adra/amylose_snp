#Quality control
fastp -i MRQ76_1.fastq -I MRQ76_2.fastq -o cleanMRQ76_1.fastq -O cleanMRQ76_2.fastq -w 4

#Alignment (bwa) - hisat2 for RNA-seq
bwa mem -M -t 10 ref_genome.fasta cleanMRQ76_1.fastq cleanMRQ76_2.fastq > MRQ76_map.sam

#Sam2sort_bam
java -jar gatk-package-4.1.4.1-local.jar SortSam -I MRQ76_map.sam
-O MRQ76.sort.bam -SO coordinate --CREATE_INDEX true

#add read group
java -jar picard.jar AddOrReplaceReadGroups I=MRQ76.sort.bam O=MRQ76.sort.rg.bam 
RGLB=MRQ76 RGPL=illumina RGPU=MRQ76_illumina RGSM=MRQ76_var1;

#Marked PCR duplicated regions
java -jar gatk-package-4.1.4.1-local.jar MarkDuplicates -I MRQ76.sort.rg.bam  -O MRQ76.sort.rg.mdup.bam -M rice_metric

#Fixmate
java -jar gatk-package-4.1.4.1-local.jar FixMateInformation -I MRQ76.sort.rg.mdup.bam -O MRQ76.sort.rg.mdup.fx.bam
-SO coordinate --CREATE_INDEX true

#Index reference genome
samtools faidx genome.fasta
java -jar gatk-package-4.0.8.1-local.jar CreateSequenceDictionary -R genome.fasta -O genome.dict

#Variant Calling
java -jar gatk-package-4.0.8.1-local.jar HaplotypeCaller -R genome.fasta -I MRQ76.sort.rg.mdup.fx.bam
-O MRQ76.gatk.raw.vcf -ERC GVCF --ploidy 2 #gatk

freebayes -f ../ref_genome/japonica.fasta MRQ76.sort.rg.mdup.fx.bam > fbayes_MRQ76.vcf #freebayes

#if combine sample
java -jar gatk-package-4.1.4.1-local.jar CombineGVCFs -R genome.fasta
--variant MRQ76.raw.vcf --variant MR297.raw.vcf  -O white_cohort_gatk_raw.vcf

#call true variants
java -jar gatk-package-4.1.4.1-local.jar GenotypeGVCFs -R genome.fasta --variant white_cohort_gatk_raw.vcf 
-O white_gatk_variants.vcf

#concordance
java -jar gatk-package-4.1.4.1-local.jar SelectVariants -R genome.fasta
--variant MRQ76.gatk.raw.vcf --concordance fbayes_MRQ76.vcf -O MRQ76.cc.var.vcf;

#select variants
java -jar gatk-package-4.0.8.1-local.jar SelectVariants -R genome.fasta 
-V MRQ76.cc.var.vcf --select-type-to-include INDEL -O INDEL.vcf
java -jar gatk-package-4.0.8.1-local.jar SelectVariants -R genome.fasta 
-V MRQ76.cc.var.vcf --select-type-to-include SNP -O SNP.vcf

#variant filtering
java -jar gatk-package-4.0.8.1-local.jar VariantFiltration -R genome.fasta -V variants.concordance.raw1.vcf 
--filter-name FilterQual --filter-expression "QUAL < 60.0" --filter-name FilterQD --filter-expression "QD < 20.0" 
--filter-name FilterFS --filter-expression "FS > 13.0" --filter-name FilterMQ --filter-expression "MQ < 30.0" 
--filter-name FilterMQRankSum --filter-expression "MQRankSum < -1.65" --filter-name FilterReadPosRankSum 
--filter-expression "ReadPosRankSum < -1.65" -O variants.concordance.flt1.vcf #gatk

grep -vP "\tFilter" variants.concordance.flt1.vcf > variants.concordance.filter1.vcf

vcftools --minDP 10 --min-alleles 2 --max-alleles 2 --non-ref-af 0.9 --vcf SNP.vcf --recode --recode-INFO-all 
--out SNP_fltr.vcf #vcftools

#vcf to txt
java -jar gatk-package-4.1.4.1-local.jar VariantsToTable -V COV1-1.var.gatk.sam.cc.raw.vcf 
-F CHROM -F REF -F ALT -F QUAL -F POS -GF GT -GF AD -GF DP -GF GQ -GF PL -O COV1-1.output.table 

#snp annotation
java -jar snpEff.jar Oryza_sativa ./examples/file.vcf > out.vcf

cat ann_bali_snp.vcf | ./scripts/vcfEffOnePerLine.pl | java -jar SnpSift.jar extractFields - CHROM POS REF ALT 
"ANN[*].EFFECT" "ANN[*].GENE" > ann_bali_snp_per_line.txt
